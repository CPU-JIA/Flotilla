/**
 * English Translations
 * ECP-D3: No Magic Strings - Centralized text management
 */

import type { Translations } from '@/contexts/language-context'

export const en: Translations = {
  // Common
  appName: 'Flotilla',
  loading: 'Loading...',
  error: 'Error',
  success: 'Success',
  confirm: 'Confirm',
  cancel: 'Cancel',
  save: 'Save',
  delete: 'Delete',
  edit: 'Edit',
  back: 'Back',

  // Navigation
  nav: {
    dashboard: 'Dashboard',
    projects: 'Projects',
    organizations: 'Organizations',
    admin: 'Admin',
    logout: 'Logout',
  },

  // Dashboard
  dashboard: {
    welcome: 'Welcome to Flotilla',
    loginSuccess: 'You have successfully logged in',
    username: 'Username',
    email: 'Email',
    role: 'Role',
    systemId: 'System ID',
    projectManagement: 'Project Management',
    projectManagementDesc: 'Create and manage your projects',
    viewMyProjects: 'View My Projects',
    codeRepository: 'Code Repository',
    codeRepositoryDesc: 'Browse and edit code files',
    openCodeEditor: 'Open Code Editor',
    personalSettings: 'Personal Settings',
    personalSettingsDesc: 'Manage your account settings',
    modifyPersonalInfo: 'Modify Personal Information',
    systemStatus: 'System Status',
    systemStatusDesc: 'Current system status (auto-refresh: 30s)',
    refreshNow: 'Refresh Now',
    checking: 'Checking...',
    backendApi: 'Backend API',
    database: 'Database',
    running: 'Running',
    error: 'Service Error',
    unknown: 'Checking...',
  },

  // Projects
  projects: {
    title: 'Projects',
    createNew: 'Create New Project',
    myProjects: 'My Projects',
    allProjects: 'All Projects',
    noProjects: 'No Projects',
    totalProjects: '{count} projects total',
    searchPlaceholder: 'Search projects...',
    search: 'Search',
    loadingProjects: 'Loading...',
    fetchError: 'Failed to fetch projects',
    networkError: 'Network error, please try again later',
    noMatchingProjects: 'No matching projects found',
    noProjectsYet: 'No projects yet',
    tryDifferentKeywords: 'Try different keywords',
    createFirstProject: 'Create your first project to start collaborating',
    noDescription: 'No description',
    members: 'members',
    owner: 'Owner',
    unknown: 'Unknown',
    previousPage: 'Previous',
    nextPage: 'Next',
    pageInfo: 'Page {current} / {total}',
    visibility: {
      public: 'Public',
      private: 'Private',
    },
    // Project Detail Page
    detail: {
      loading: 'Loading...',
      fetchError: 'Failed to fetch project details',
      networkError: 'Network error, please try again later',
      backToList: 'Back to project list',
      backToProject: '‚Üê Back to project',
      memberCount: 'Members',
      createdAt: 'Created At',
      owner: 'Owner',
      projectMembers: 'Project Members',
      projectActions: 'Project Actions',
      initRepository: 'üéØ Initialize Code Repository',
      initializing: '‚è≥ Initializing...',
      repositoryReady: '‚úÖ Code Repository Ready',
      initSuccess: '‚úÖ Repository initialized successfully!',
      initFailed: '‚ùå Initialization failed',
      initFailedRetry: '‚ùå Initialization failed, please try again later',
      projectSettings: '‚öôÔ∏è Project Settings',
      projectSettingsComingSoon: 'Project settings feature coming soon',
      browseFiles: 'üìÅ Browse Files',
      codeEditor: 'üìù Code Editor',
      versionHistory: 'üìú Version History',
    },
    // Files Management Page
    files: {
      title: 'File Management',
      loading: 'Loading...',
      loadingFiles: 'Loading file list...',
      loadProject: 'Failed to load project information',
      loadFilesFailed: 'Failed to load file list',
      networkError: 'Network error, please try again later',
      storage: 'Storage Usage',
      rootFolder: 'üìÅ Root Directory',
      backFolder: '‚¨ÖÔ∏è Back to Parent',
      uploadFile: 'üì§ Upload File',
      createFolder: 'üìÅ New Folder',
      noFiles: 'No files',
      noFilesDesc: 'Upload files or create folders to start collaboration',
      fileName: 'File Name',
      size: 'Size',
      modifiedAt: 'Modified At',
      download: 'Download',
      delete: 'Delete',
      folder: 'Folder',
      openEditor: 'üìù Open Code Editor',
      downloadFailed: 'Download failed',
      downloadFailedRetry: 'Download failed, please try again later',
      deleteFailed: 'Delete failed',
      deleteFailedRetry: 'Delete failed, please try again later',
      searchPlaceholder: 'Search files...',
      parentFolder: 'Parent Directory',
    },
    // Version History Page
    history: {
      title: 'Version History',
      description: 'View all commit records and code changes',
      selectBranch: 'Select Branch',
      noBranchSelected: 'No branch selected',
      noBranchDesc: 'Please select a branch from the project page to view version history',
      backToProject: '‚Üê Back to project',
      loading: 'Loading...',
      noCommits: 'No commit records',
      commitDetails: 'Commit Details',
      loadingDetails: 'Loading change details...',
      noCommitSelected: 'No commit selected',
      selectCommitDesc: 'Select a commit from the left to view details',
      changedFiles: 'Changed Files',
      additions: 'Additions',
      deletions: 'Deletions',
      changes: 'Changes',
      author: 'Author',
      date: 'Date',
      message: 'Commit Message',
      selectDifferentBranch: 'Select different branch',
      totalCommits: 'Total {count} commits',
      commitHistory: 'Commit History',
      clickToView: 'Click to view detailed changes',
      filesCount: ' files',
      previousPage: 'Previous',
      nextPage: 'Next',
      pageInfo: 'Page {current} / {total}',
      all: 'All',
      modified: 'Modified',
      loadFailed: 'Failed to load commit history',
      selectCommit: 'Select a commit',
    },
  },

  // Editor
  editor: {
    title: 'Code Editor',
    selectFile: 'Select a file from the left to start editing',
    saving: 'Saving...',
    saved: 'Saved',
    unsaved: 'Unsaved',
    versionHistory: 'Version History',
    edit: 'Edit',
    preview: 'Preview',
    backToFiles: 'Back to Files',
    codeEditor: 'Code Editor',
    currentFile: 'Current File',
    parentFolder: 'Parent Folder',
    rootFolder: 'Root Directory',
    noFiles: 'No Files',
    folder: 'Folder',
    loading: 'Loading...',
    loadingFile: 'Loading file...',
    selectFileToEdit: 'Select a file from the left to start editing',
    languageSupport: 'Supports 30+ programming languages',
    loadError: 'Load failed',
    networkError: 'Network error, please try again later',
  },

  // Authentication
  auth: {
    login: 'Login',
    register: 'Register',
    username: 'Username',
    email: 'Email',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    // Register Page
    registerTitle: 'Register',
    registerSubtitle: 'Create your Flotilla account',
    usernamePlaceholder: 'Enter username (3-20 characters)',
    usernameHelper: 'Only letters, numbers, and underscores',
    emailPlaceholder: 'Enter email address',
    passwordPlaceholder: 'Enter password (at least 8 characters)',
    confirmPasswordPlaceholder: 'Re-enter password',
    registering: 'Registering...',
    registerButton: 'Register',
    alreadyHaveAccount: 'Already have an account?',
    loginNow: 'Login Now',
    // Validation Errors
    allFieldsRequired: 'Please fill in all fields',
    usernameInvalid: 'Username must be 3-20 characters, only letters, numbers, and underscores',
    emailInvalid: 'Please enter a valid email address',
    passwordTooShort: 'Password must be at least 8 characters',
    passwordMismatch: 'Passwords do not match',
    registerFailed: 'Registration failed, please try again later',
    networkError: 'Network error, please try again later',
  },

  // Organizations
  organizations: {
    title: 'Organizations',
    createNew: 'Create New Organization',
    myOrganizations: 'My Organizations',
    noOrganizations: 'No Organizations',
    personal: 'Personal Organization',
    name: 'Organization Name',
    slug: 'Organization Slug',
    description: 'Description',
    members: 'Members',
    memberCount: 'Member Count',
    role: 'Role',
    settings: 'Settings',
    overview: 'Overview',
    deleteConfirm: 'Are you sure you want to delete this organization?',
    deleteSuccess: 'Organization deleted',
    createSuccess: 'Organization created successfully',
    updateSuccess: 'Organization updated successfully',
    slugHelper: 'Lowercase letters, numbers, and hyphens only',
    roles: {
      OWNER: 'Owner',
      ADMIN: 'Admin',
      MEMBER: 'Member',
    },
    addMember: 'Add Member',
    removeMember: 'Remove Member',
    updateRole: 'Update Role',
    selectUser: 'Select User',
    selectRole: 'Select Role',
    noMembers: 'No Members',
  },

  // Teams
  teams: {
    title: 'Teams',
    createNew: 'Create New Team',
    myTeams: 'My Teams',
    noTeams: 'No Teams',
    name: 'Team Name',
    slug: 'Team Slug',
    description: 'Description',
    noDescription: 'No description',
    backToList: 'Back to Teams',
    members: 'Members',
    memberCount: 'Member Count',
    role: 'Role',
    settings: 'Settings',
    overview: 'Overview',
    permissions: 'Project Permissions',
    projects: 'Projects',
    deleteConfirm: 'Are you sure you want to delete this team?',
    deleteSuccess: 'Team deleted',
    createSuccess: 'Team created successfully',
    updateSuccess: 'Team updated successfully',
    addMemberSuccess: 'Member added successfully',
    removeMemberSuccess: 'Member removed',
    confirmRemoveMember: 'Remove member {name}?',
    slugHelper: 'Lowercase letters, numbers, and hyphens only',
    roles: {
      MAINTAINER: 'Maintainer',
      MEMBER: 'Member',
    },
    addMember: 'Add Member',
    removeMember: 'Remove Member',
    updateRole: 'Update Role',
    selectMember: 'Select Member',
    selectRole: 'Select Role',
    noMembers: 'No Members',
    assignPermission: 'Assign Permission',
    revokePermission: 'Revoke Permission',
    updatePermission: 'Update Permission',
    permissionLevels: {
      READ: 'Read',
      WRITE: 'Write',
      ADMIN: 'Admin',
    },
  },

  // Settings
  settings: {
    title: 'Personal Settings',
    description: 'Manage your account information and security settings',
    basicInfo: 'Basic Information',
    username: 'Username',
    usernameRequired: 'Username',
    usernamePlaceholder: 'Enter username (minimum 3 characters)',
    email: 'Email Address',
    emailCannotChange: 'Email address cannot be changed',
    bio: 'Biography',
    bioPlaceholder: 'Tell us about yourself...',
    bioCharCount: 'characters',
    avatar: 'Avatar URL',
    avatarPlaceholder: 'https://example.com/avatar.jpg',
    avatarHelper: 'Enter your avatar image URL',
    saving: 'Saving...',
    saveChanges: 'Save Changes',
    profileUpdateSuccess: 'Profile updated successfully!',
    profileUpdateError: 'Failed to update profile, please try again',
    usernameMinLength: 'Username must be at least 3 characters',
    bioMaxLength: 'Biography must be at most 500 characters',
    changePassword: 'Change Password',
    currentPassword: 'Current Password',
    currentPasswordPlaceholder: 'Enter your current password',
    newPassword: 'New Password',
    newPasswordPlaceholder: 'At least 8 characters with uppercase, lowercase, and numbers',
    confirmPassword: 'Confirm New Password',
    confirmPasswordPlaceholder: 'Re-enter your new password',
    passwordRequirements: 'Password Requirements:',
    passwordMinLength: 'At least 8 characters',
    passwordUppercase: 'At least one uppercase letter',
    passwordLowercase: 'At least one lowercase letter',
    passwordNumber: 'At least one number',
    changing: 'Changing...',
    changePasswordButton: 'Change Password',
    passwordChangeSuccess: 'Password changed successfully!',
    passwordChangeError: 'Failed to change password, please try again',
    passwordTooShort: 'New password must be at least 8 characters',
    passwordMismatch: 'New passwords do not match',
    passwordComplexity: 'New password must contain uppercase, lowercase, and numbers',
    required: '*',
  },

  // Raft Cluster
  raft: {
    title: 'Raft Consensus Algorithm',
    description: 'Real-time visualization of distributed consensus cluster',
    liveMonitoring: 'Live monitoring with HTTP polling (2s interval)',
    term: 'Term',
    clusterTopology: 'Cluster Topology',
    performanceMetrics: 'Performance Metrics',
    controlPanel: 'Control Panel',
    aboutRaft: 'About Raft Consensus',
    aboutRaftDescription:
      'Raft is a consensus algorithm designed to be easy to understand. It provides fault tolerance and strong consistency for distributed systems. The algorithm ensures that the cluster elects a leader, replicates logs across nodes, and maintains consensus even during network partitions or node failures.',
    failedToLoad: 'Failed to load cluster data',
    ensureBackendRunning: 'Please ensure the backend server is running at',
    loadingVisualization: 'Loading Raft cluster visualization...',
    // Cluster Management Page
    management: {
      title: 'Raft Cluster Management',
      description: 'Monitor and manage distributed consensus algorithm cluster',
      start: 'Start',
      stop: 'Stop',
      restart: 'Restart',
      clusterStatus: 'Cluster Status',
      leaderStatus: 'Leader Status',
      clusterSize: 'Cluster Size',
      uptime: 'Uptime',
      unknown: 'Unknown',
      isLeader: 'Is Leader',
      notLeader: 'Not Leader',
      currentTerm: 'Current Term',
      nodeId: 'Node ID',
      nodes: 'Nodes',
      configuredNodes: 'Configured Nodes',
      seconds: 'seconds',
      clusterOverview: 'Cluster Overview',
      topologyMap: 'Topology Map',
      distributedCommands: 'Distributed Commands',
      configInfo: 'Configuration',
      performanceDescription: 'Cluster performance and operation statistics',
      totalCommands: 'Total Commands',
      commandsPerSecond: 'Commands/sec',
      averageResponseTime: 'Average Response Time',
      leaderElections: 'Leader Elections',
      nodeStatusDetails: 'Node Status Details',
      nodeStatusDescription: 'Detailed status information for each node in the cluster',
      logLength: 'Log Length',
      appliedLogs: 'Applied',
      clusterConfig: 'Cluster Configuration',
      clusterConfigDescription: 'Configuration parameters for current Raft cluster',
      basicConfig: 'Basic Configuration',
      nodeList: 'Node List',
      electionTimeout: 'Election Timeout',
      heartbeatInterval: 'Heartbeat Interval',
      rpcTimeout: 'RPC Timeout',
      portMapping: 'Port Mapping',
      configValidationFailed: 'Configuration validation failed',
    },
  },

  // Admin
  admin: {
    dashboard: 'Admin Dashboard',
    systemOverview: 'System overview and statistics',
    loading: 'Loading...',
    loadingStats: 'Failed to load statistics',
    retry: 'Retry',
    total: 'Total',
    projects: 'Projects',
    commits: 'Commits',
    roles: 'Roles',
    totalUsers: 'Total Users',
    active: 'Active',
    inactive: 'Inactive',
    totalProjects: 'Total Projects',
    public: 'Public',
    private: 'Private',
    totalCommits: 'Total Commits',
    allCodeCommits: 'All code commits',
    permissionDistribution: 'Permission Distribution',
    superAdmins: 'Super Admins',
    admins: 'Admins',
    regularUsers: 'Regular Users',
    userManagement: 'User Management',
    userManagementDesc: 'View, ban, unban users, and modify role permissions',
    projectManagement: 'Project Management',
    projectManagementDesc: 'View all projects and manage permissions and members',
    raftClusterManagement: 'Raft Cluster Management',
    raftClusterManagementDesc: 'Monitor and manage distributed consensus algorithm cluster',
    enterManagement: 'Enter Management ‚Üí',
    recentUsers: 'Recent Users',
    recentUsersDesc: 'Latest 5 users',
    recentProjects: 'Recent Projects',
    recentProjectsDesc: 'Latest 5 projects',
    by: 'by',

    // User Management
    users: {
      title: 'User Management',
      totalUsers: '{count} users total',
      addUser: 'Add User',
      searchPlaceholder: 'Search by username or email...',
      search: 'Search',
      loadingUsersFailed: 'Failed to load user list',
      userList: 'User List',
      createdAt: 'Created at',
      ownsProjects: 'Owns {count} projects',
      participatesProjects: 'Participates in {count} projects',
      ban: 'Ban',
      unban: 'Unban',
      confirmBan: 'Are you sure you want to ban this user?',
      confirmUnban: 'Are you sure you want to unban this user?',
      operationSuccess: 'Operation successful',
      operationFailed: 'Operation failed',
      banned: 'Banned',
      updateRole: 'Update Role',
      confirmUpdateRole: "Are you sure you want to change this user's role to {role}?",
      roleUpdateSuccess: 'Role updated successfully',
      delete: 'Delete',
      confirmDelete: 'Are you sure you want to delete this user? This action cannot be undone!',
      deleteSuccess: 'User deleted',
      deleteFailed: 'Delete failed',
      roles: {
        SUPER_ADMIN: 'Super Admin',
        ADMIN: 'Admin',
        USER: 'User',
      },
    },

    // Project Management
    projectsPage: {
      title: 'Project Management',
      totalProjects: '{count} projects total',
      searchPlaceholder: 'Search by name or description...',
      search: 'Search',
      loadingProjectsFailed: 'Failed to load project list',
      projectList: 'Project List',
      noProjects: 'No projects',
      noMatchingProjects: 'No matching projects found',
      tryDifferentKeywords: 'Try different keywords',
      noProjectsCreated: 'No projects have been created yet',
      public: 'Public',
      private: 'Private',
      noDescription: 'No description',
      owner: 'Owner',
      unknown: 'Unknown',
      members: 'Members',
      people: 'people',
      createdAt: 'Created at',
      viewDetails: 'View Details',
      delete: 'Delete',
      confirmDelete:
        'Are you sure you want to delete project "{name}"? This action cannot be undone!',
      deleteSuccess: 'Project deleted',
      deleteFailed: 'Delete failed',
    },
  },

  // Form validation
  validation: {
    emailRequired: 'Please enter email address',
    invalidEmail: 'Invalid email format',
    fieldRequired: 'This field is required',
    passwordTooShort: 'Password must be at least 6 characters',
    passwordMismatch: 'Passwords do not match',
    usernameInvalid: 'Username can only contain letters, numbers and underscores',
    slugInvalid: 'Slug can only contain lowercase letters, numbers and hyphens',
    nameTooShort: 'Name must be at least 2 characters',
    descriptionTooLong: 'Description cannot exceed 500 characters',
  },
}
