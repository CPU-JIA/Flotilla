/**
 * English Translations
 * ECP-D3: No Magic Strings - Centralized text management
 */

import type { Translations } from '@/contexts/language-context'

export const en: Translations = {
  // Common
  appName: 'Flotilla',
  loading: 'Loading...',
  error: 'Error',
  success: 'Success',
  confirm: 'Confirm',
  cancel: 'Cancel',
  save: 'Save',
  delete: 'Delete',
  edit: 'Edit',
  back: 'Back',

  // Navigation
  nav: {
    dashboard: 'Dashboard',
    projects: 'Projects',
    organizations: 'Organizations',
    admin: 'Admin',
    logout: 'Logout',
  },

  // Dashboard
  dashboard: {
    welcome: 'Welcome to Flotilla',
    loginSuccess: 'You have successfully logged in',
    username: 'Username',
    email: 'Email',
    role: 'Role',
    systemId: 'System ID',
    projectManagement: 'Project Management',
    projectManagementDesc: 'Create and manage your projects',
    viewMyProjects: 'View My Projects',
    codeRepository: 'Code Repository',
    codeRepositoryDesc: 'Browse and edit code files',
    openCodeEditor: 'Open Code Editor',
    personalSettings: 'Personal Settings',
    personalSettingsDesc: 'Manage your account settings',
    modifyPersonalInfo: 'Modify Personal Information',
    systemStatus: 'System Status',
    systemStatusDesc: 'Current system status (auto-refresh: 30s)',
    refreshNow: 'Refresh Now',
    checking: 'Checking...',
    backendApi: 'Backend API',
    database: 'Database',
    running: 'Running',
    error: 'Service Error',
    unknown: 'Checking...',
  },

  // Projects
  projects: {
    title: 'Projects',
    createNew: 'Create New Project',
    myProjects: 'My Projects',
    allProjects: 'All Projects',
    noProjects: 'No Projects',
    totalProjects: '{count} projects total',
    searchPlaceholder: 'Search projects...',
    search: 'Search',
    loadingProjects: 'Loading...',
    fetchError: 'Failed to fetch projects',
    networkError: 'Network error, please try again later',
    noMatchingProjects: 'No matching projects found',
    noProjectsYet: 'No projects yet',
    tryDifferentKeywords: 'Try different keywords',
    createFirstProject: 'Create your first project to start collaborating',
    noDescription: 'No description',
    members: 'members',
    owner: 'Owner',
    unknown: 'Unknown',
    previousPage: 'Previous',
    nextPage: 'Next',
    pageInfo: 'Page {current} / {total}',
    visibility: {
      public: 'Public',
      private: 'Private',
    },
    // Project Detail Page
    detail: {
      loading: 'Loading...',
      fetchError: 'Failed to fetch project details',
      networkError: 'Network error, please try again later',
      backToList: 'Back to project list',
      backToProject: '‚Üê Back to project',
      memberCount: 'Members',
      createdAt: 'Created At',
      owner: 'Owner',
      projectMembers: 'Project Members',
      projectActions: 'Project Actions',
      initRepository: 'üéØ Initialize Code Repository',
      initializing: '‚è≥ Initializing...',
      repositoryReady: '‚úÖ Code Repository Ready',
      initSuccess: '‚úÖ Repository initialized successfully!',
      initFailed: '‚ùå Initialization failed',
      initFailedRetry: '‚ùå Initialization failed, please try again later',
      projectSettings: 'Project Settings',
      projectSettingsComingSoon: 'Project settings feature coming soon',
      browseFiles: 'Browse Files',
      codeEditor: 'Code Editor',
      versionHistory: 'Version History',
    },
    // Project Settings Page
    settings: {
      title: 'Project Settings',
      backToProject: '‚Üê Back to Project',
      general: 'General',
      members: 'Members',
      dangerZone: 'Danger Zone',
      // General Settings
      projectName: 'Project Name',
      projectNamePlaceholder: 'Enter project name',
      projectDescription: 'Project Description',
      projectDescriptionPlaceholder: 'Enter project description (optional)',
      visibility: 'Visibility',
      visibilityPublic: 'Public',
      visibilityPrivate: 'Private',
      defaultBranch: 'Default Branch',
      saveChanges: 'Save Changes',
      saving: 'Saving...',
      saveSuccess: 'Changes saved successfully',
      saveFailed: 'Failed to save changes',
      // Archive
      archiveProject: 'Archive Project',
      archiveDesc: 'Archiving will make the project read-only',
      archiveButton: 'Archive this project',
      archiving: 'Archiving...',
      archiveSuccess: 'Project archived successfully',
      archiveFailed: 'Failed to archive project',
      unarchiveButton: 'Unarchive',
      unarchiving: 'Unarchiving...',
      unarchiveSuccess: 'Project unarchived successfully',
      unarchiveFailed: 'Failed to unarchive project',
      // Delete
      deleteProject: 'Delete Project',
      deleteDesc: 'Permanently delete this project and all its data',
      deleteWarning: 'Warning: This action cannot be undone',
      deleteConfirmPrompt: 'Please type the project name to confirm',
      deleteButton: 'I understand, delete this project',
      deleting: 'Deleting...',
      deleteSuccess: 'Project deleted successfully',
      deleteFailed: 'Failed to delete project',
      deleteNameMismatch: 'Project name does not match',
      // Members Management
      membersList: 'Members List',
      addMember: 'Add Member',
      noMembers: 'No members yet',
      noMembersDesc: 'Invite team members to start collaboration',
      memberName: 'Member',
      memberRole: 'Role',
      memberJoinedAt: 'Joined At',
      memberActions: 'Actions',
      roleOwner: 'Owner',
      roleMaintainer: 'Maintainer',
      roleMember: 'Member',
      roleViewer: 'Viewer',
      changeRole: 'Change Role',
      removeMember: 'Remove Member',
      removeMemberConfirm: 'Are you sure you want to remove this member?',
      removing: 'Removing...',
      removeSuccess: 'Member removed successfully',
      removeFailed: 'Failed to remove member',
      // Add Member Dialog
      addMemberTitle: 'Add Member',
      addMemberDesc: 'Invite a new member to join this project',
      userId: 'User ID',
      userIdPlaceholder: 'Enter user ID',
      selectRole: 'Select Role',
      addButton: 'Add Member',
      adding: 'Adding...',
      addSuccess: 'Member added successfully',
      addFailed: 'Failed to add member',
      cancel: 'Cancel',
    },
    // Files Management Page
    files: {
      title: 'File Management',
      loading: 'Loading...',
      loadingFiles: 'Loading file list...',
      loadProject: 'Failed to load project information',
      loadFilesFailed: 'Failed to load file list',
      networkError: 'Network error, please try again later',
      storage: 'Storage Usage',
      rootFolder: 'üìÅ Root Directory',
      backFolder: '‚¨ÖÔ∏è Back to Parent',
      uploadFile: 'üì§ Upload File',
      createFolder: 'üìÅ New Folder',
      noFiles: 'No files',
      noFilesDesc: 'Upload files or create folders to start collaboration',
      fileName: 'File Name',
      size: 'Size',
      modifiedAt: 'Modified At',
      download: 'Download',
      delete: 'Delete',
      folder: 'Folder',
      openEditor: 'üìù Open Code Editor',
      downloadFailed: 'Download failed',
      downloadFailedRetry: 'Download failed, please try again later',
      deleteFailed: 'Delete failed',
      deleteFailedRetry: 'Delete failed, please try again later',
      searchPlaceholder: 'Search files...',
      parentFolder: 'Parent Directory',
    },
    // Version History Page
    history: {
      title: 'Version History',
      description: 'View all commit records and code changes',
      selectBranch: 'Select Branch',
      noBranchSelected: 'No branch selected',
      noBranchDesc: 'Please select a branch from the project page to view version history',
      backToProject: '‚Üê Back to project',
      loading: 'Loading...',
      noCommits: 'No commit records',
      commitDetails: 'Commit Details',
      loadingDetails: 'Loading change details...',
      noCommitSelected: 'No commit selected',
      selectCommitDesc: 'Select a commit from the left to view details',
      changedFiles: 'Changed Files',
      additions: 'Additions',
      deletions: 'Deletions',
      changes: 'Changes',
      author: 'Author',
      date: 'Date',
      message: 'Commit Message',
      selectDifferentBranch: 'Select different branch',
      totalCommits: 'Total {count} commits',
      commitHistory: 'Commit History',
      clickToView: 'Click to view detailed changes',
      filesCount: ' files',
      previousPage: 'Previous',
      nextPage: 'Next',
      pageInfo: 'Page {current} / {total}',
      all: 'All',
      modified: 'Modified',
      loadFailed: 'Failed to load commit history',
      selectCommit: 'Select a commit',
    },
  },

  // Editor
  editor: {
    title: 'Code Editor',
    selectFile: 'Select a file from the left to start editing',
    saving: 'Saving...',
    saved: 'Saved',
    unsaved: 'Unsaved',
    versionHistory: 'Version History',
    edit: 'Edit',
    preview: 'Preview',
    backToFiles: 'Back to Files',
    codeEditor: 'Code Editor',
    currentFile: 'Current File',
    parentFolder: 'Parent Folder',
    rootFolder: 'Root Directory',
    noFiles: 'No Files',
    folder: 'Folder',
    loading: 'Loading...',
    loadingFile: 'Loading file...',
    selectFileToEdit: 'Select a file from the left to start editing',
    languageSupport: 'Supports 30+ programming languages',
    loadError: 'Load failed',
    networkError: 'Network error, please try again later',
  },

  // Authentication
  auth: {
    login: 'Login',
    register: 'Register',
    username: 'Username',
    email: 'Email',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    // Register Page
    registerTitle: 'Register',
    registerSubtitle: 'Create your Flotilla account',
    usernamePlaceholder: 'Enter username (3-20 characters)',
    usernameHelper: 'Only letters, numbers, and underscores',
    emailPlaceholder: 'Enter email address',
    passwordPlaceholder: 'Enter password (at least 8 characters)',
    confirmPasswordPlaceholder: 'Re-enter password',
    registering: 'Registering...',
    registerButton: 'Register',
    alreadyHaveAccount: 'Already have an account?',
    loginNow: 'Login Now',
    // Validation Errors
    allFieldsRequired: 'Please fill in all fields',
    usernameInvalid: 'Username must be 3-20 characters, only letters, numbers, and underscores',
    emailInvalid: 'Please enter a valid email address',
    passwordTooShort: 'Password must be at least 8 characters',
    passwordMismatch: 'Passwords do not match',
    registerFailed: 'Registration failed, please try again later',
    networkError: 'Network error, please try again later',
  },

  // Organizations
  organizations: {
    title: 'Organizations',
    createNew: 'Create New Organization',
    myOrganizations: 'My Organizations',
    noOrganizations: 'No Organizations',
    personal: 'Personal Organization',
    name: 'Organization Name',
    slug: 'Organization Slug',
    description: 'Description',
    members: 'Members',
    memberCount: 'Member Count',
    role: 'Role',
    settings: 'Settings',
    overview: 'Overview',
    deleteConfirm: 'Are you sure you want to delete this organization?',
    deleteSuccess: 'Organization deleted',
    createSuccess: 'Organization created successfully',
    updateSuccess: 'Organization updated successfully',
    slugHelper: 'Lowercase letters, numbers, and hyphens only',
    roles: {
      OWNER: 'Owner',
      ADMIN: 'Admin',
      MEMBER: 'Member',
    },
    addMember: 'Add Member',
    removeMember: 'Remove Member',
    updateRole: 'Update Role',
    selectUser: 'Select User',
    selectRole: 'Select Role',
    noMembers: 'No Members',
  },

  // Teams
  teams: {
    title: 'Teams',
    createNew: 'Create New Team',
    myTeams: 'My Teams',
    noTeams: 'No Teams',
    name: 'Team Name',
    slug: 'Team Slug',
    description: 'Description',
    noDescription: 'No description',
    backToList: 'Back to Teams',
    members: 'Members',
    memberCount: 'Member Count',
    role: 'Role',
    settings: 'Settings',
    overview: 'Overview',
    permissions: 'Project Permissions',
    projects: 'Projects',
    deleteConfirm: 'Are you sure you want to delete this team?',
    deleteSuccess: 'Team deleted',
    createSuccess: 'Team created successfully',
    updateSuccess: 'Team updated successfully',
    addMemberSuccess: 'Member added successfully',
    removeMemberSuccess: 'Member removed',
    confirmRemoveMember: 'Remove member {name}?',
    slugHelper: 'Lowercase letters, numbers, and hyphens only',
    roles: {
      MAINTAINER: 'Maintainer',
      MEMBER: 'Member',
    },
    addMember: 'Add Member',
    removeMember: 'Remove Member',
    updateRole: 'Update Role',
    selectMember: 'Select Member',
    selectRole: 'Select Role',
    noMembers: 'No Members',
    assignPermission: 'Assign Permission',
    revokePermission: 'Revoke Permission',
    updatePermission: 'Update Permission',
    permissionLevels: {
      READ: 'Read',
      WRITE: 'Write',
      ADMIN: 'Admin',
    },
  },

  // Settings
  settings: {
    title: 'Personal Settings',
    description: 'Manage your account information and security settings',
    basicInfo: 'Basic Information',
    username: 'Username',
    usernameRequired: 'Username',
    usernamePlaceholder: 'Enter username (minimum 3 characters)',
    email: 'Email Address',
    emailCannotChange: 'Email address cannot be changed',
    bio: 'Biography',
    bioPlaceholder: 'Tell us about yourself...',
    bioCharCount: 'characters',
    avatar: 'Avatar',
    avatarUpload: 'Upload Avatar',
    avatarUploading: 'Uploading...',
    avatarRemove: 'Remove Avatar',
    avatarDefault: 'Default Generated Avatar',
    avatarCustom: 'Custom Avatar',
    avatarHelper: 'Supports JPG, PNG, GIF, WebP formats, max 5MB',
    avatarUploadSuccess: 'Avatar uploaded successfully',
    avatarUploadError: 'Failed to upload avatar',
    avatarInvalidType: 'Only JPG, PNG, GIF, WebP formats are supported',
    avatarTooLarge: 'Image size cannot exceed 5MB',
    saving: 'Saving...',
    saveChanges: 'Save Changes',
    profileUpdateSuccess: 'Profile updated successfully!',
    profileUpdateError: 'Failed to update profile, please try again',
    usernameMinLength: 'Username must be at least 3 characters',
    bioMaxLength: 'Biography must be at most 500 characters',
    changePassword: 'Change Password',
    currentPassword: 'Current Password',
    currentPasswordPlaceholder: 'Enter your current password',
    newPassword: 'New Password',
    newPasswordPlaceholder: 'At least 8 characters with uppercase, lowercase, and numbers',
    confirmPassword: 'Confirm New Password',
    confirmPasswordPlaceholder: 'Re-enter your new password',
    passwordRequirements: 'Password Requirements:',
    passwordMinLength: 'At least 8 characters',
    passwordUppercase: 'At least one uppercase letter',
    passwordLowercase: 'At least one lowercase letter',
    passwordNumber: 'At least one number',
    changing: 'Changing...',
    changePasswordButton: 'Change Password',
    passwordChangeSuccess: 'Password changed successfully!',
    passwordChangeError: 'Failed to change password, please try again',
    passwordTooShort: 'New password must be at least 8 characters',
    passwordMismatch: 'New passwords do not match',
    passwordComplexity: 'New password must contain uppercase, lowercase, and numbers',
    required: '*',
  },

  // Raft Cluster
  raft: {
    title: 'Raft Consensus Algorithm',
    description: 'Real-time visualization of distributed consensus cluster',
    liveMonitoring: 'Live monitoring with HTTP polling (2s interval)',
    term: 'Term',
    clusterTopology: 'Cluster Topology',
    performanceMetrics: 'Performance Metrics',
    controlPanel: 'Control Panel',
    aboutRaft: 'About Raft Consensus',
    aboutRaftDescription:
      'Raft is a consensus algorithm designed to be easy to understand. It provides fault tolerance and strong consistency for distributed systems. The algorithm ensures that the cluster elects a leader, replicates logs across nodes, and maintains consensus even during network partitions or node failures.',
    failedToLoad: 'Failed to load cluster data',
    ensureBackendRunning: 'Please ensure the backend server is running at',
    loadingVisualization: 'Loading Raft cluster visualization...',
    // Cluster Management Page
    management: {
      title: 'Raft Cluster Management',
      description: 'Monitor and manage distributed consensus algorithm cluster',
      start: 'Start',
      stop: 'Stop',
      restart: 'Restart',
      clusterStatus: 'Cluster Status',
      leaderStatus: 'Leader Status',
      clusterSize: 'Cluster Size',
      uptime: 'Uptime',
      unknown: 'Unknown',
      isLeader: 'Is Leader',
      notLeader: 'Not Leader',
      currentTerm: 'Current Term',
      nodeId: 'Node ID',
      nodes: 'Nodes',
      configuredNodes: 'Configured Nodes',
      seconds: 'seconds',
      clusterOverview: 'Cluster Overview',
      topologyMap: 'Topology Map',
      distributedCommands: 'Distributed Commands',
      configInfo: 'Configuration',
      performanceDescription: 'Cluster performance and operation statistics',
      totalCommands: 'Total Commands',
      commandsPerSecond: 'Commands/sec',
      averageResponseTime: 'Average Response Time',
      leaderElections: 'Leader Elections',
      nodeStatusDetails: 'Node Status Details',
      nodeStatusDescription: 'Detailed status information for each node in the cluster',
      logLength: 'Log Length',
      appliedLogs: 'Applied',
      clusterConfig: 'Cluster Configuration',
      clusterConfigDescription: 'Configuration parameters for current Raft cluster',
      basicConfig: 'Basic Configuration',
      nodeList: 'Node List',
      electionTimeout: 'Election Timeout',
      heartbeatInterval: 'Heartbeat Interval',
      rpcTimeout: 'RPC Timeout',
      portMapping: 'Port Mapping',
      configValidationFailed: 'Configuration validation failed',
    },
  },

  // Admin
  admin: {
    dashboard: 'Admin Dashboard',
    systemOverview: 'System overview and statistics',
    loading: 'Loading...',
    loadingStats: 'Failed to load statistics',
    retry: 'Retry',
    total: 'Total',
    projects: 'Projects',
    commits: 'Commits',
    roles: 'Roles',
    totalUsers: 'Total Users',
    active: 'Active',
    inactive: 'Inactive',
    totalProjects: 'Total Projects',
    public: 'Public',
    private: 'Private',
    totalCommits: 'Total Commits',
    allCodeCommits: 'All code commits',
    permissionDistribution: 'Permission Distribution',
    superAdmins: 'Super Admins',
    admins: 'Admins',
    regularUsers: 'Regular Users',
    userManagement: 'User Management',
    userManagementDesc: 'View, ban, unban users, and modify role permissions',
    projectManagement: 'Project Management',
    projectManagementDesc: 'View all projects and manage permissions and members',
    raftClusterManagement: 'Raft Cluster Management',
    raftClusterManagementDesc: 'Monitor and manage distributed consensus algorithm cluster',
    enterManagement: 'Enter Management ‚Üí',
    recentUsers: 'Recent Users',
    recentUsersDesc: 'Latest 5 users',
    recentProjects: 'Recent Projects',
    recentProjectsDesc: 'Latest 5 projects',
    by: 'by',

    // User Management
    users: {
      title: 'User Management',
      totalUsers: '{count} users total',
      addUser: 'Add User',
      searchPlaceholder: 'Search by username or email...',
      search: 'Search',
      loadingUsersFailed: 'Failed to load user list',
      userList: 'User List',
      createdAt: 'Created at',
      ownsProjects: 'Owns {count} projects',
      participatesProjects: 'Participates in {count} projects',
      ban: 'Ban',
      unban: 'Unban',
      confirmBan: 'Are you sure you want to ban this user?',
      confirmUnban: 'Are you sure you want to unban this user?',
      operationSuccess: 'Operation successful',
      operationFailed: 'Operation failed',
      banned: 'Banned',
      updateRole: 'Update Role',
      confirmUpdateRole: "Are you sure you want to change this user's role to {role}?",
      roleUpdateSuccess: 'Role updated successfully',
      delete: 'Delete',
      confirmDelete: 'Are you sure you want to delete this user? This action cannot be undone!',
      deleteSuccess: 'User deleted',
      deleteFailed: 'Delete failed',
      roles: {
        SUPER_ADMIN: 'Super Admin',
        ADMIN: 'Admin',
        USER: 'User',
      },
    },

    // Project Management
    projectsPage: {
      title: 'Project Management',
      totalProjects: '{count} projects total',
      searchPlaceholder: 'Search by name or description...',
      search: 'Search',
      loadingProjectsFailed: 'Failed to load project list',
      projectList: 'Project List',
      noProjects: 'No projects',
      noMatchingProjects: 'No matching projects found',
      tryDifferentKeywords: 'Try different keywords',
      noProjectsCreated: 'No projects have been created yet',
      public: 'Public',
      private: 'Private',
      noDescription: 'No description',
      owner: 'Owner',
      unknown: 'Unknown',
      members: 'Members',
      people: 'people',
      createdAt: 'Created at',
      viewDetails: 'View Details',
      delete: 'Delete',
      confirmDelete:
        'Are you sure you want to delete project "{name}"? This action cannot be undone!',
      deleteSuccess: 'Project deleted',
      deleteFailed: 'Delete failed',
    },
  },

  // Issue Tracking System
  issues: {
    title: 'Issues',
    createNew: 'New Issue',
    noIssues: 'No Issues',
    totalIssues: '{count} issues total',
    searchPlaceholder: 'Search issues...',
    backToIssues: '‚Üê Back to Issues',

    // Issue List
    list: {
      title: 'Issues',
      openIssues: 'Open',
      closedIssues: 'Closed',
      allIssues: 'All',
      number: '#',
      titleColumn: 'Title',
      state: 'State',
      author: 'Author',
      comments: 'Comments',
      noIssuesFound: 'No issues found',
      noIssuesDesc: 'Create your first issue!',
      loading: 'Loading...',
      previousPage: 'Previous',
      nextPage: 'Next',
      pageInfo: 'Showing {start} to {end} of {total} issues',
    },

    // Create Issue
    create: {
      title: 'New Issue',
      titleLabel: 'Title',
      titlePlaceholder: 'Brief description of the issue',
      titleRequired: 'Title is required',
      bodyLabel: 'Description',
      bodyPlaceholder: 'Detailed description (supports Markdown)',
      bodyHelper: 'You can use Markdown formatting',
      labelsLabel: 'Labels',
      labelsPlaceholder: 'Select labels...',
      milestoneLabel: 'Milestone',
      milestonePlaceholder: 'Select milestone...',
      assigneesLabel: 'Assignees',
      assigneesPlaceholder: 'Select members...',
      noMembers: 'No members found',
      creating: 'Creating...',
      createButton: 'Create Issue',
      cancelButton: 'Cancel',
      createSuccess: 'Issue created successfully',
      createFailed: 'Failed to create issue, please try again',
    },

    // Issue Detail
    detail: {
      loading: 'Loading...',
      notFound: 'Issue not found',
      goBack: 'Go Back',
      openedBy: 'Opened by {author} on {date}',
      noDescription: 'No description provided',
      closeIssue: 'Close Issue',
      reopenIssue: 'Reopen',
      deleteIssue: 'Delete Issue',
      editIssue: 'Edit',
      confirmDelete: 'Are you sure you want to delete this issue?',
      closeSuccess: 'Issue closed',
      closeFailed: 'Failed to close',
      reopenSuccess: 'Issue reopened',
      reopenFailed: 'Failed to reopen',
      deleteSuccess: 'Issue deleted',
      deleteFailed: 'Failed to delete',
      metadata: 'Metadata',
      milestone: 'Milestone',
      labels: 'Labels',
      assignees: 'Assignees',
      noMilestone: 'No milestone',
      noLabels: 'No labels',
      noAssignees: 'Unassigned',
    },

    // Issue State
    state: {
      open: 'Open',
      closed: 'Closed',
    },

    // Label Management
    labels: {
      title: 'Labels',
      createNew: 'New Label',
      name: 'Label Name',
      namePlaceholder: 'e.g., bug, feature',
      color: 'Color',
      colorHelper: 'Click to select color',
      description: 'Description (optional)',
      descriptionPlaceholder: 'Explain the purpose of this label',
      createButton: 'Create Label',
      updateButton: 'Update Label',
      deleteButton: 'Delete',
      cancelButton: 'Cancel',
      noLabels: 'No Labels',
      noLabelsDesc: 'Create labels to organize your issues',
      confirmDelete: 'Are you sure you want to delete this label?',
      createSuccess: 'Label created successfully',
      createFailed: 'Failed to create',
      updateSuccess: 'Label updated successfully',
      updateFailed: 'Failed to update',
      deleteSuccess: 'Label deleted',
      deleteFailed: 'Failed to delete',
      usedBy: 'Used by {count} issues',
    },

    // Milestone Management
    milestones: {
      title: 'Milestones',
      loading: 'Loading...',
      createNew: 'New Milestone',
      name: 'Milestone Title',
      namePlaceholder: 'e.g., v1.0.0',
      description: 'Description (optional)',
      descriptionPlaceholder: 'Milestone goals and details',
      dueDate: 'Due Date',
      dueDatePlaceholder: 'Select date...',
      state: 'State',
      stateOpen: 'Open',
      stateClosed: 'Closed',
      openState: 'Open',
      closedState: 'Closed',
      createButton: 'Create Milestone',
      updateButton: 'Update Milestone',
      deleteButton: 'Delete',
      cancelButton: 'Cancel',
      closeButton: 'Close Milestone',
      reopenButton: 'Reopen',
      editButton: 'Edit',
      openMilestones: 'Open',
      closedMilestones: 'Closed',
      allMilestones: 'All',
      noMilestones: 'No Milestones',
      noMilestonesDesc: 'Create milestones to track project progress',
      noOpenMilestones: 'No open milestones',
      noClosedMilestones: 'No closed milestones',
      confirmDelete: 'Are you sure you want to delete this milestone?',
      createSuccess: 'Milestone created successfully',
      createFailed: 'Failed to create',
      updateSuccess: 'Milestone updated successfully',
      updateFailed: 'Failed to update',
      deleteSuccess: 'Milestone deleted',
      deleteFailed: 'Failed to delete',
      usedBy: 'Used by {count} issues',
      closeSuccess: 'Milestone closed',
      closeFailed: 'Failed to close',
      reopenSuccess: 'Milestone reopened',
      reopenFailed: 'Failed to reopen',
      progress: 'Progress',
      due: 'Due',
      closed: 'Closed',
      openIssues: '{count} open',
      closedIssues: '{count} closed',
      dueBy: 'Due by {date}',
      overdue: 'Overdue',
      noDueDate: 'No due date',
    },

    // Comments
    comments: {
      title: 'Comments',
      loading: 'Loading comments...',
      addComment: 'Add Comment',
      writeTab: 'Write',
      previewTab: 'Preview',
      commentPlaceholder: 'Leave a comment (supports Markdown)',
      emptyComment: 'Comment cannot be empty',
      supportsMarkdown: 'Markdown supported',
      submitting: 'Submitting...',
      submitButton: 'Comment',
      updateButton: 'Update Comment',
      cancelButton: 'Cancel',
      editButton: 'Edit',
      deleteButton: 'Delete',
      noComments: 'No Comments',
      noCommentsDesc: 'Be the first to comment',
      beFirst: 'Be the first to comment',
      confirmDelete: 'Are you sure you want to delete this comment?',
      createSuccess: 'Comment added',
      createFailed: 'Failed to add comment',
      updateSuccess: 'Comment updated',
      updateFailed: 'Failed to update',
      deleteSuccess: 'Comment deleted',
      deleteFailed: 'Failed to delete',
      edited: '(edited)',
      commentedAt: 'Commented on {date}',
      justNow: 'Just now',
    },
  },

  // Pull Requests
  pullRequests: {
    title: 'Pull Requests',
    createNew: 'New Pull Request',
    noPullRequests: 'No Pull Requests',
    totalPullRequests: '{count} Pull Requests',
    searchPlaceholder: 'Search Pull Requests...',
    backToPullRequests: '‚Üê Back to Pull Requests',
    backToPRs: '‚Üê Back to Pull Requests',

    // PR List
    list: {
      title: 'Pull Requests',
      openPullRequests: 'Open',
      closedPullRequests: 'Closed',
      mergedPullRequests: 'Merged',
      allPullRequests: 'All',
      number: '#',
      titleColumn: 'Title',
      state: 'State',
      author: 'Author',
      sourceBranch: 'Source Branch',
      targetBranch: 'Target Branch',
      noPullRequestsFound: 'No Pull Requests found',
      noPullRequestsDesc: 'Create your first Pull Request!',
      loading: 'Loading...',
      previousPage: 'Previous',
      nextPage: 'Next',
      pageInfo: 'Showing {start} to {end} of {total} Pull Requests',
    },

    // Create PR
    create: {
      title: 'Create Pull Request',
      titleLabel: 'Title',
      titlePlaceholder: 'Brief description of the PR',
      titleRequired: 'Title is required',
      bodyLabel: 'Description',
      bodyPlaceholder: 'Detailed description (Markdown supported)',
      bodyHelper: 'You can use Markdown formatting',
      sourceBranchLabel: 'Source Branch',
      sourceBranchPlaceholder: 'Select source branch...',
      targetBranchLabel: 'Target Branch',
      targetBranchPlaceholder: 'Select target branch...',
      noBranches: 'No branches found',
      creating: 'Creating...',
      createButton: 'Create Pull Request',
      cancelButton: 'Cancel',
      createSuccess: 'Pull Request created successfully',
      createFailed: 'Failed to create Pull Request, please try again later',
      sameBranchError: 'Source and target branches cannot be the same',
    },

    // PR Detail
    detail: {
      loading: 'Loading...',
      notFound: 'Pull Request not found',
      goBack: 'Go Back',
      openedBy: 'opened by {author} on {date}',
      mergedBy: 'merged by {merger} on {date}',
      closedAt: 'closed on {date}',
      noDescription: 'No description provided',
      mergePullRequest: 'Merge Pull Request',
      mergePR: 'Merge PR',
      closePullRequest: 'Close Pull Request',
      closePR: 'Close PR',
      reopenPullRequest: 'Reopen',
      deletePullRequest: 'Delete Pull Request',
      deletePR: 'Delete PR',
      editPullRequest: 'Edit',
      editPR: 'Edit',
      confirmDelete: 'Are you sure you want to delete this Pull Request?',
      confirmMerge: 'Are you sure you want to merge this Pull Request?',
      closeSuccess: 'Pull Request closed',
      closeFailed: 'Failed to close',
      reopenSuccess: 'Pull Request reopened',
      reopenFailed: 'Failed to reopen',
      deleteSuccess: 'Pull Request deleted',
      deleteFailed: 'Failed to delete',
      mergeSuccess: 'Pull Request merged successfully',
      mergeFailed: 'Merge failed',
      metadata: 'Metadata',
      branches: 'Branches',
      commits: 'Commits',
      filesChanged: 'Files Changed',
      additions: '+{count}',
      deletions: '-{count}',
      conversation: 'Conversation',
      changesTab: 'Changes',
      commitsTab: 'Commits',
      mergedThisPullRequest: 'merged this pull request',
    },

    // PR State
    state: {
      open: 'Open',
      closed: 'Closed',
      merged: 'Merged',
    },

    // Merge Dialog
    mergeStrategy: {
      title: 'Merge Strategy',
      merge: 'Merge Commit',
      mergeDesc: 'Preserve complete commit history',
      squash: 'Squash',
      squashDesc: 'Squash all commits into a single commit',
      rebase: 'Rebase',
      rebaseDesc: 'Rewrite commit history as linear history',
    },

    merge: {
      title: 'Merge Pull Request',
      selectStrategy: 'Select merge strategy',
      mergeCommit: 'Merge Commit',
      mergeCommitDesc: 'Preserve complete commit history with a merge commit',
      mergeDesc: 'Preserve complete commit history',
      squash: 'Squash',
      squashDesc: 'Squash all commits into a single commit',
      rebase: 'Rebase',
      rebaseDesc: 'Rewrite commit history as linear history',
      commitMessageLabel: 'Merge commit message (optional)',
      commitMessagePlaceholder: 'Enter custom commit message...',
      confirmButton: 'Confirm Merge',
      cancelButton: 'Cancel',
      merging: 'Merging...',
    },

    // Diff Viewer
    diff: {
      title: 'Files Changed',
      loading: 'Loading Diff...',
      noChanges: 'No changes',
      filesChanged: '{count} files changed',
      additions: '+{count}',
      deletions: '-{count}',
      binaryFile: 'Binary file',
      fileAdded: 'New file',
      fileModified: 'Modified',
      fileDeleted: 'Deleted',
      expandAll: 'Expand All',
      collapseAll: 'Collapse All',
    },

    // Comments
    comments: {
      title: 'Comments',
      addComment: 'Add Comment',
      commentPlaceholder: 'Leave a comment...',
      submitComment: 'Submit Comment',
      submitting: 'Submitting...',
      submitButton: 'Submit Comment',
      editComment: 'Edit Comment',
      deleteComment: 'Delete Comment',
      noComments: 'No comments yet',
      createSuccess: 'Comment added',
      createFailed: 'Failed to add comment',
    },

    // Code Review
    reviews: {
      title: 'Reviews',
      addReview: 'Submit Review',
      approve: 'Approve',
      approveLabel: 'Approve',
      requestChanges: 'Request Changes',
      changesRequestedLabel: 'Request Changes',
      comment: 'Comment',
      commentLabel: 'Comment Only',
      reviewCommentPlaceholder: 'Leave your review...',
      reviewPlaceholder: 'Leave your review...',
      submitReview: 'Submit Review',
      submitting: 'Submitting...',
      submitButton: 'Submit Review',
      cancelButton: 'Cancel',
      noReviews: 'No reviews yet',
      createSuccess: 'Review submitted',
      createFailed: 'Failed to submit review',
    },

    // Review Summary
    reviewSummary: {
      title: 'Review Summary',
      approved: 'Approved',
      changesRequested: 'Changes Requested',
      commented: 'Commented',
      reviewers: 'Reviewers',
      refresh: 'Refresh',
      loading: 'Loading review summary...',
      error: 'Failed to load review summary',
      noReviewers: 'No reviews yet',
    },

    // Merge Status
    mergeStatus: {
      canMerge: 'Can Merge',
      cannotMerge: 'Cannot Merge',
      mergeBlocked: 'Merge Blocked',
      checking: 'Checking...',
      // Blocking reasons
      activeChangeRequests: 'Active change requests',
      insufficientApprovals: 'Need {count} more approval(s)',
      cannotMergeOwnPR: 'Cannot merge your own PR (project policy)',
      ownerApprovalRequired: 'Project owner approval required',
    },
  },

  // Form validation
  validation: {
    emailRequired: 'Please enter email address',
    invalidEmail: 'Invalid email format',
    fieldRequired: 'This field is required',
    passwordTooShort: 'Password must be at least 6 characters',
    passwordMismatch: 'Passwords do not match',
    usernameInvalid: 'Username can only contain letters, numbers and underscores',
    slugInvalid: 'Slug can only contain lowercase letters, numbers and hyphens',
    nameTooShort: 'Name must be at least 2 characters',
    descriptionTooLong: 'Description cannot exceed 500 characters',
  },
}
