# Production Docker Compose with Nginx Reverse Proxy
# Domain: 571732.xyz
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: flotilla-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/flotilla.conf:/etc/nginx/conf.d/flotilla.conf:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
      - website
    networks:
      - cloud-dev-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: flotilla-certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - cloud-dev-network

  # Update environment variables for production
  backend:
    environment:
      - NODE_ENV=production
      - FRONTEND_URL=https://app.571732.xyz
      - API_URL=https://api.571732.xyz

  frontend:
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.571732.xyz/api

  website:
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=https://app.571732.xyz
